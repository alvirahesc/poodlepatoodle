# -*- coding: utf-8 -*-
"""Tugas Mandiri Pertemuan 5_Alvi Rahmatullah Akbar_UG.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZxCqJqhYt4BZ72VaTM6-jKvFgSkRnZ3a
"""

# Install modul kaggle secara inline 
!pip install kaggle

![image.png](attachment:image.png)

"""1. Login Kaggle.com 
2. Kemudian pada menu Profile --> Account
3. Klik Create New Api Token 
4. Maka akan terdownload file kaggle.json

Kaggle API secara default mengasumsikan bahwa file kaggle.json tersebut berada di dalam folder: 
* ~/.kaggle/ (Linux/Mac)  
* C:\Users\<Windows-username>\.kaggle\ (Windows)

Jika folder tersebut belum ada:
1. Buat folder di direktori C:\Users\<Windows-username>\.kaggle\
2. letakkan file kaggle.json kedalam folder tersebut

<div class="text-center">
    Dokumentasi Kaggle Commands selengkapnya <a href="https://github.com/Kaggle/kaggle-api#datasets">Disini</a>
</div>
"""

# Mencari dataset yang tersedia di kaggle --> pilih data provider dari UCIML
!kaggle datasets list -s Iris

# Download dan ekstrak dataset
!kaggle datasets download uciml/iris --unzip

"""Atau bisa juga menggunakan link dari kaggle"""

#Download data dari kaggle
!kaggle datasets list -s Flowers

#Import Library Pandas

import pandas as pd

#Import Library Numpy

import numpy as np

"""### DATAFRAME

DataFrame adalah struktur data 2 dimensi yang berbentuk tabular (mempunyai baris dan kolom). Hampir semua data tidak hanya memiliki 1 kolom tetapi lebih dari 1 kolom, sehingga lebih cocok menggunakan pandas DataFrame untuk mengolahnya.

Penggunaan dataframe pada Python dengan menggunakan syntaks: df.
"""

#Panggil file (load file bernama Iris.csv) dan simpan dalam dataframe Lalu tampilkan 5 baris awal dataset dengan function head()

df = pd.read_csv("Iris.csv")
df.head()

"""# Telaah Data

Pada telaah data, dapat dilakukan untuk mengetahui:
- tipe data dari setiap kolom
- deskripsi statistik data
"""

#Tampilkan tipe data dari kolom yang ada pada dataset

df.loc[:,"Species"]

#Hitung ukuran (jumlah baris dan kolom) dari dataset

df.shape

#Tampilkan data untuk kolom "Id" dan kolom "Species" dalam bentuk dataframe

df.loc[:,["Id","Species"]]

#Tampilkan data dengan dataframe, dan data yang ditampilkan adalah baris dengan indeks 0 (nol) sampai dengan indeks 9 (sembilan)

df.iloc[9,:]

#Tampilkan data hanya kolom "Id" dan kolom "Species", pada baris dengan indeks 0 (nol) sampai dengan indeks 9 (sembilan)

df.loc[9,["Id","Species"]]

#Tampilkan data pada 8 (delapan) baris pertama dari dataset, dengan dataframe

df.head(8)

#Tampilkan data pada 3 (tiga) baris terakhir dari dataset, dengan dataframe

df.tail(3)

"""# Deskripsi Statistik Data

DataFrame method describe() menampilkan statistik dasar setiap kolom data yang bertipe numerik, mencakup banyaknya data (count), rerata aritmetik (mean), simpangan baku (std), nilai terkecil (min), kuartil pertama (25%), kuartil kedua/median (50%), kuartil ketiga (75%), dan nilai terbesar (max).
"""

#Hitung korelasi dataset

df.corr()

#Hitung korelasi dataset untuk kolom PetalLengthCm, PetalWidthCm

df.corr()
# Petal length hampir berkorelasi sempurna dengan petal width

# Penggunaan Metode describe untuk komputasi statistik

df.describe

#Gunakan method describe pada dataset yang sudah di load untuk data bertype objek

df.describe(percentiles=None, include=object, exclude=None)

#Gunakan method describe pada dataset yang sudah di load untuk semua type data

df.describe(include='all')

#Hitung nilai Mean dari dataset

df.mean

#Hitung nilai Mean untuk kolom PetalLengthCm

df["PetalLengthCm"].mean()

#Cari nilai minimal untuk kolom SepalWidthCm

df["SepalWidthCm"].min()

"""# Method Groupby

Method groupby memungkinkan analisis dilakukan secara per kelompok nilai atribut tertentu.
"""

#Hitung nilai mean dari dataset untuk SepalLengthCm per Species dengan metode groupby

df["SepalLengthCm"].groupby

"""# Method Value Count

value_counts() menghasilkan frekuensi setiap nilai unik di dalam kolom, dan yang tertinggi count-nya adalah merupakan modus pada kolom tersebut.
"""

#Perhitungan frekuensi pada kolom 'Species' dengan menggunakan metode value_counts() dalam bentuk dataframe

df["Species"].value_counts()

# Hitung frekuensi pada kolom 'PetalLenghCm' dengan menggunakan metode value_counts()

df["PetalLengthCm"].value_counts()